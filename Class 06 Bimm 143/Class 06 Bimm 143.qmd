---
title: "Class 06 Bimm 143"
author: "Nickolas Beam"
format: gfm
toc: true
---

# Function basics

All functions in R consist of at least 3 things:

- A **name** (we can pick this but it must start with a character)
- Input **arguments** (there can be multiple comma separated inputs)
- The **body** ( where woork actually happens)


# Example input vectors to start with

```{r}

student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)

```

```{r}
mean(student1)
```

```{r}
min(student1)
```
Looking at the "See Also" section of the `min()` help page I found out about `which.min()`

```{r}
which.min(student1)
```

```{r}
student1[1:7]
```

I can get the same vector without the 8th element

```{r}
index1 <- which.min(student1)
index2 <- which.min(student2) 
index3 <- which.min(student3)
student1[-index1]
student2[-index2]
student3[-index3]
mean1 <- mean(student1)
mean2 <- mean(student2)
mean3 <- mean(student3)
top_score <- max(mean1, mean2, mean3)

```
line 44 and 47 and 50 can be combined as such

```{r}
mean( student1[-which.min(student1)])
```
```{r}
mean( student2[-which.min(student2)], na.rm = TRUE)
```
na.rm = TRUE allows to ignore the NA's
is.(na) -> 0 replaces NA's with 0
```{r}
mean(student1[-which.min(student1)])
student2[is.na(student2)] <- 0
mean(student2[-which.min(student2)])
student3[is.na(student3)] <- 0
mean(student3[-which.min(student3)])
```
^ averages of students scores without the lowest score and with NA -> 0

I now have a working snippet of code that will work for each student
```{r}
x <- student3
x[is.na(x)] <- 0
mean(x[-which.min(x)])
```

turning this into a function grade()
```{r}
grade <- function(x){
x[is.na(x)] <- 0
mean(x[-which.min(x)])
}
```

```{r}
grade(student1)
grade(student2)
grade(student3)
```
## Question 2
>Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook? [3pts]
Student 1 is the top scoring student overall

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
```

```{r}
head(gradebook)
```

Learn apply() function
```{r}
results <- apply(gradebook, 1, grade)
```

Which student did the best overall??
```{r}
which.max(results)
```
```{r}
results[which.max(results)]
```
Student 18 is the top scoring student

```{r}
which.min(apply(gradebook, 2, sum, na.rm = TRUE))
```
## Question 3
```{r}
low_assignment <- apply(gradebook, 2, grade)
low_assignment[which.min(low_assignment)]
```
## Question 4
>Q4. Optional Extension: From your analysis of the gradebook, which homework was most
predictive of overall score (i.e. highest correlation with average grade score)? [1pt]

```{r}
mask <- gradebook
mask[is.na(mask)] <- 0

cor(mask, results)
```

## Question 5
```{r}
apply(mask, 2, cor, y=results)
```

